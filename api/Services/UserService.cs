using api.Models;
using api.Services.Interfaces;
using Npgsql;
using System.Data;

namespace api.Services;

public class UserService : IUserService
{
    private readonly string connectionString;

    public UserService(IConfiguration configuration)
    {
        connectionString = configuration.GetConnectionString("DefaultConnection") ?? throw new ArgumentNullException("Connection string not found");
    }

    public List<User> GetAllUsers()
    {
        List<User> list = [];
        using NpgsqlConnection con = new NpgsqlConnection(connectionString);
        NpgsqlCommand cmd = new NpgsqlCommand("SELECT id, firstname, lastname, email, password, passwordconfirm, summary, avatar, createdat FROM users ORDER BY id", con);
        con.Open();
        NpgsqlDataReader rdr = cmd.ExecuteReader();
        while (rdr.Read())
        {
            User user = new()
            {
                Id = Convert.ToInt32(rdr["id"]),
                FirstName = rdr["firstname"].ToString() ?? string.Empty,
                LastName = rdr["lastname"].ToString() ?? string.Empty,
                Email = rdr["email"].ToString() ?? string.Empty,
                Password = rdr["password"].ToString() ?? string.Empty,
                PasswordConfirm = rdr["passwordconfirm"].ToString() ?? string.Empty,
                Summary = rdr["summary"].ToString() ?? string.Empty,
                Avatar = rdr["avatar"].ToString() ?? string.Empty,
                CreatedAt = Convert.ToDateTime(rdr["createdat"])
            };

            list ??= [];
            list.Add(user);
        }
        con.Close();
        return list;
    }

    public User? GetUserById(int id)
    {
        User? user = null;
        using NpgsqlConnection con = new NpgsqlConnection(connectionString);
        NpgsqlCommand cmd = new NpgsqlCommand("SELECT id, firstname, lastname, email, password, passwordconfirm, summary, avatar, createdat FROM users WHERE id = @p_id", con);
        cmd.Parameters.AddWithValue("@p_id", id);
        con.Open();
        NpgsqlDataReader rdr = cmd.ExecuteReader();
        if (rdr.Read())
        {
            user = new User()
            {
                Id = Convert.ToInt32(rdr["id"]),
                FirstName = rdr["firstname"].ToString() ?? string.Empty,
                LastName = rdr["lastname"].ToString() ?? string.Empty,
                Email = rdr["email"].ToString() ?? string.Empty,
                Password = rdr["password"].ToString() ?? string.Empty,
                PasswordConfirm = rdr["passwordconfirm"].ToString() ?? string.Empty,
                Summary = rdr["summary"].ToString() ?? string.Empty,
                Avatar = rdr["avatar"].ToString() ?? string.Empty,
                CreatedAt = Convert.ToDateTime(rdr["createdat"])
            };
        }
        con.Close();
        return user;
    }

    public User CreateUser(object userData)
    {
        // This method would implement user creation logic
        // For now, returning a basic user object
        var newUser = new User
        {
            Id = 0, // Would be generated by database
            FirstName = "New",
            LastName = "User",
            Email = "newuser@example.com"
        };

        return newUser;
    }
}